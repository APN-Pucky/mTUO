apply plugin: 'com.android.application'

def my_boost_dir = projectDir.getAbsolutePath() + "/prebuilt/ndk_25_boost_1.79.0"
def getTUOVersion = {
    def hashStdOut = new ByteArrayOutputStream()
    exec {
        workingDir projectDir.getAbsolutePath() + "/src/main/cpp/tyrant_optimize"
        commandLine 'git', 'describe', '--tags', '--abbrev=0', '--dirty'
        standardOutput = hashStdOut
    }
    return hashStdOut.toString().trim()
}

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId "de.neuwirthinformatik.alexander.mtuo"
        minSdkVersion 21
        targetSdkVersion 32
        versionCode 29
        versionName "6.5.1-r0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        externalNativeBuild {
            cmake {
                // flags for the c++ compiler eg "-std=c++14 -frtti -fexceptions"
                // If you set cppFlags to "-std=c++14", you may need to build your boost libraries
                // with the same flags, depending on your compiler defaults.

                // this causes libc++_shared.so to get packaged into .apk

                arguments '-DANDROID_STL=c++_shared'//gnustl_shared',//c++_shared',//gnustl_shared',
                arguments '-DTYRANT_OPTIMIZER_VERSION=' + getTUOVersion()
                // This is used in CMakeLists167.txt so our native code can find/use (prebuilt) boost
                arguments '-DMY_BOOST_DIR=' + my_boost_dir
                //arguments '-DMY_BOOST_LIBS_DIR=' + my_boost_dir_libs
                //arguments '-DMY_BOOST_INC_DIR=' + my_boost_dir_inc

            }
        }

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            // need to also have ~ boost binaries built for each abi specified here
            abiFilters 'armeabi-v7a', 'x86', 'x86_64', 'arm64-v8a'
            //abiFilters 'armeabi-v7a'
        }


    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    sourceSets {
        main {
            // Android Studio doesn't package precompiled external (*.so) libs into apk, even if linked against via "add_library (... SHARED IMPORTED) in CMakeLists167.txt
            // See eg https://stackoverflow.com/questions/24357687/how-to-include-so-library-in-android-studio/29234765
            // Hopefully this will be remedied in near future.
            // As a workaroun in the meantime, need to add them manually to jniLibs.srcDirs
            // Note: This causes ALL *.so files in ABI (eg "armeabi-v7a") subdir of this dir to get packaged into .apk - relative to "app" dir
            // If you want to just include those necessary (eh chrono,, system) copy/link them to a separate dir, and reference that dir here instead.
            jniLibs.srcDirs = [
                    // should contain any external libs which should be compiled in {armeabi-v7a,arm64-v8a,x86,x86_64,mips} subdirs
                    //my_boost_dir_libs

                    //, "src/main/JniLibs/boost" // could add additional dirs (with ABI subdirs) to be packaged into apk like this.
                    // Relative paths like this will be interpreted as relative to "app" dir
            ]
        }
    }
    ndkVersion "25.0.8775105"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.6.1'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'androidx.preference:preference:1.2.0'


    //compileOnly 'org.projectlombok:lombok:1.16.22'
    //annotationProcessor 'org.projectlombok:lombok:1.16.22'

    implementation 'com.github.APN-Pucky:TULib:0.3.16'
}
